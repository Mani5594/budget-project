'use client'
import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import AddBudgetForm from '@/components/AddBudgetForm'
import AddExpenseForm from '@/components/AddExpenseForm'
import BudgetItem from '@/components/BudgetItem'
import Table from '@/components/Table'
import Link from 'next/link'
import { useEffect, useRef, useState } from 'react'
import { Budget } from '../../helper'
import Intro from '@/components/Intro'
import { useSelector, useDispatch } from 'react-redux'
import { fetchBudgets } from '@/slices/budgetSlice'
import { AppDispatch, RootState } from '@/store/store'
import { fetchExpense } from '@/slices/expenseSlice'


export default function Home() {

  const initialRef = useRef(false);

  const {budgets} = useSelector((state: RootState) => state.budget)
  const {expenses} = useSelector((state: RootState) => state.expense)
  const {accessToken, userName} = useSelector((state: RootState) => state.auth.auth)
  const dispatch = useDispatch<AppDispatch>()

  useEffect(() => {
    (!initialRef.current && accessToken) && dispatch(fetchBudgets());
    (!initialRef.current && accessToken) && dispatch(fetchExpense());
    

    return () => {initialRef.current = true}
  }, [])

  useEffect(() => {
    ( accessToken) && dispatch(fetchBudgets());
    ( accessToken) && dispatch(fetchExpense());
  }, [accessToken])

  return (
    <>
      <Head>
        <title>Budget App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main}`}>
        {accessToken ? (
          <div className="dashboard">
            <h1>
              Welcome back, <span className="accent" style={{textTransform: 'capitalize'}}>{userName}</span>
            </h1>
            <div className="grid-sm">
              {budgets && budgets.length > 0 ? (
                <div className="grid-lg">
                  <div className="flex-lg">
                    <AddBudgetForm />
                    <AddExpenseForm budgets={budgets} />
                  </div>
                  <h2>Existing Budgets</h2>
                  <div className="budgets">
                    {budgets.map((budget: Budget) => (
                      <BudgetItem key={budget.id} budget={budget} />
                    ))}
                  </div>
                  {expenses && expenses.length > 0 && (
                    <div className="grid-md">
                      <h2>Recent Expenses</h2>
                      <Table
                        expenses={expenses
                          // .sort((a:Expense, b:Expense) => b.createdAt - a.createdAt)
                          .slice(0, 8)}
                      />
                      {expenses.length > 8 && (
                        <Link href="/expenses" className="btn btn--dark">
                          View all expenses
                        </Link>
                      )}
                    </div>
                  )}
                </div>
              ) : (
                <div className="grid-sm">
                  <p>Personal budgeting is the secret to financial freedom.</p>
                  <p>Create a budget to get started!</p>
                  <AddBudgetForm />
                </div>
              )}
            </div>
          </div>
        ) : (
          <Intro />
        )}
      </main>
    </>
  )
}
